openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/user/all:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/user/{id}:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/authentication/signout:
    get:
      operationId: signoutAuthenticationViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/farms:
    get:
      operationId: retrieveFarm
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
      tags:
      - api
    post:
      operationId: createFarm
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
      tags:
      - api
    put:
      operationId: updateFarm
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFarm
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/farms/{id}:
    get:
      operationId: retrieveFarm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this farm.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
      tags:
      - api
    post:
      operationId: createFarm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this farm.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
      tags:
      - api
    put:
      operationId: updateFarm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this farm.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFarm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this farm.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/{id}/:
    get:
      operationId: retrieveReferral
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this referral.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: ''
      tags:
      - api
  /api/v1/update/{id}/:
    get:
      operationId: retrieveReferral
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this referral.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: ''
      tags:
      - api
    put:
      operationId: updateReferral
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this referral.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Referral'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Referral'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Referral'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateReferral
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this referral.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Referral'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Referral'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Referral'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: ''
      tags:
      - api
  /api/v1/all_Investment/:
    get:
      operationId: listInvestments
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Investment'
          description: ''
      tags:
      - api
  /api/v1/all_Referral/:
    get:
      operationId: listReferrals
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Referral'
          description: ''
      tags:
      - api
  /api/v1/authentication/create-user:
    post:
      operationId: createUserAuthenticationViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/authentication/set-password:
    post:
      operationId: setPasswordAuthenticationViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/authentication/signin:
    post:
      operationId: signinAuthenticationViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/authentication/verify-otp:
    post:
      operationId: verifyOtpAuthenticationViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/create/:
    post:
      operationId: createReferral
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Referral'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Referral'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Referral'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: ''
      tags:
      - api
  /api/v1/delete/{id}/:
    delete:
      operationId: destroyReferral
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this referral.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          description: Phone Number of the user
          maxLength: 16
        gender:
          enum:
          - MALE
          - FEMALE
          - RATHER NOT SAY
          type: string
          description: Gender of the User
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth of the user
        role:
          enum:
          - FARMER
          - INVESTOR
          type: string
          description: The options are Farmer and investor
        bank_name:
          type: string
          description: The banks in Nigeria
          maxLength: 25
        account_number:
          type: string
          nullable: true
          description: Account number field.
          maxLength: 11
        country:
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - CV
          - KH
          - CM
          - CA
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - SZ
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - KP
          - MK
          - MP
          - 'NO'
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SX
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - KR
          - SS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - UM
          - US
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          type: string
        state:
          enum:
          - ABIA
          - ABUJA
          - ADAMAWA
          - AKWA IBOM
          - ANAMBRA
          - BAUCHI
          - BAYELSA
          - BENUE
          - BORNO
          - CROSS RIVER
          - DELTA
          - EBONYI
          - EDO
          - EKITI
          - ENUGU
          - GOMBE
          - IMO
          - JIGAWA
          - KADUNA
          - KANO
          - KATSINA
          - KEBBI
          - KOGI
          - KWARA
          - LAGOS
          - NASAWARA
          - NIGER
          - OGUN
          - ONDO
          - OSUN
          - OYO
          - PLATEAU
          - RIVERS
          - SOKOTO
          - TARABA
          - YOBE
          - ZAMFARA
          type: string
          nullable: true
          description: All the states in Nigeria and the FCT
        address:
          type: string
          description: Address of the farm
      required:
      - username
      - email
      - phone_number
      - bank_name
      - country
      - address
    Farm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        location:
          enum:
          - ABIA
          - ABUJA
          - ADAMAWA
          - AKWA IBOM
          - ANAMBRA
          - BAUCHI
          - BAYELSA
          - BENUE
          - BORNO
          - CROSS RIVER
          - DELTA
          - EBONYI
          - EDO
          - EKITI
          - ENUGU
          - GOMBE
          - IMO
          - JIGAWA
          - KADUNA
          - KANO
          - KATSINA
          - KEBBI
          - KOGI
          - KWARA
          - LAGOS
          - NASAWARA
          - NIGER
          - OGUN
          - ONDO
          - OSUN
          - OYO
          - PLATEAU
          - RIVERS
          - SOKOTO
          - TARABA
          - YOBE
          - ZAMFARA
          type: string
          nullable: true
          description: All the states in Nigeria and the FCT
        funds_needed:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        roi:
          type: string
          format: decimal
          multipleOf: 1.0e-05
          maximum: 1000000000000000
          minimum: -1000000000000000
          description: in percentage
        duration:
          type: string
          description: in years
        product:
          type: string
          maxLength: 50
        farm_type:
          enum:
          - CROPS
          - LIVESTOCK
          type: string
        thumbnail:
          type: string
          format: binary
          nullable: true
        description:
          type: string
        is_active:
          type: boolean
        farmer:
          type: integer
      required:
      - name
      - funds_needed
      - roi
      - duration
      - product
      - description
      - farmer
    Investment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        investment_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        duration:
          type: string
          description: in years
        end_date:
          type: string
          format: date-time
          nullable: true
          description: End date of investment
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Start date of investment
        farm:
          type: integer
      required:
      - investment_amount
      - duration
      - farm
    Referral:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        referral_bonus:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        user_id:
          type: integer
      required:
      - referral_bonus
      - user_id
